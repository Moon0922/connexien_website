@model Connexien.Web.Models.ProfileModel
@{
    var labels = new[] { "label-warning", "label-success", "label-info", "label-danger" };
    ViewBag.CoverId = Model.CoverPic;
    //var cover = Url.Action("Picture", "Profile", new { id = ViewBag.CoverId, t = "cover" });
    var cover = "https://connexien.blob.core.windows.net/site-profile-images/" + Model.CoverPic;

    var url = string.IsNullOrWhiteSpace(Model.CompanyWebsite) ? "" : Model.CompanyWebsite.ToLower().Substring(0, 4) == "http" ? Model.CompanyWebsite : "http://" + Model.CompanyWebsite;
}
<style>
    .profile .profile-cover
    {
        background-image: url('@Html.Raw(cover)');
    }

    .profile .article { overflow:hidden;}

    .profile .article-title
    {
        background-color:#C7E5F3;
        margin:-15px;
        padding:15px;
    }

    .profile .article-desc
    {
        margin-top:40px;
    }
</style>
<div class="container-fluid profile">
    <div class="row">
        <div class="col-xs-12">
            <div class="profile-cover">
                <div class="profile-cover-shade profile-editable profile-editbox-nopad" data-edit-url="@Url.Action("Section", "Provider", new { id = "Profile"}, null)">
                    @if (Model.Type == "provider")
                    {
                        <div class="pull-right profile-stat hidden-xs">
                            <h6>
                                @for (var i = 0; i < Model.AbsRating; i++)
                                {
                                    <span class="glyphicon glyphicon-star"></span>
                                }
                                @for (var i = 0; i < 5 - Model.AbsRating; i++)
                                {
                                    <span class="glyphicon glyphicon-star-empty"></span>
                                }
                                <br />
                                <small>Expert Rating</small>
                            </h6>
                        </div>
                        <div class="pull-right profile-stat hidden-xs">
                            <h6>
                                @Model.Engagements<br />
                            <small>Engagements</small>
                        </h6>
                    </div>
                }
                </div>
            </div>
        </div>
    </div>
    <div class="row profile-body">
        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 profile-left">
            <div class="profile-editable profile-editbox-nopad" data-edit-url="@Url.Action("Section", "Provider", new { id = "Profile" }, null)" style="display:flex; justify-content:center;">
                <div class="circular-portrait circular-portrait-profile profile-img">
                    <img style="width:150px;" src="https://connexien.blob.core.windows.net/site-profile-images-resized/@Model.AvatarPic.GetSizedImageName(150,150)?w=150&h=150&t=avatar" />
                </div>
            </div>
            <div class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Personal" }, null)">
                <h5 class="text-muted">
                    <b>@Model.FirstName @Model.LastName</b><br />
                    <small>@Model.Title at @Model.CompanyName</small>
                </h5>
                <hr />

                @{
                    var location = string.IsNullOrWhiteSpace(Model.City) ? Model.City : "";
                    location = string.IsNullOrWhiteSpace(location) ? Model.State : location + ", " + Model.State;
                }

                @if (!string.IsNullOrWhiteSpace(location))
                {
                    <h6><span class="glyphicon glyphicon-map-marker"></span>&nbsp;&nbsp;@location</h6>
                }
                @if (!string.IsNullOrWhiteSpace(Model.PersonalPhone))
                {
                    <h6><span class="glyphicon glyphicon-phone"></span>&nbsp;&nbsp;<a href="tel: @Model.PersonalPhone">@Model.PersonalPhone</a></h6>
                }
                @if (!string.IsNullOrWhiteSpace(Model.PersonalEmail))
                {
                    <h6><span class="glyphicon glyphicon-envelope"></span>&nbsp;&nbsp;<a href="mailto: @Model.PersonalEmail">@Model.PersonalEmail</a></h6>
                }
                @if (!string.IsNullOrWhiteSpace(Model.CompanyWebsite))
                {
                    <h6><span class="glyphicon glyphicon-link"></span>&nbsp;&nbsp;<a href="@url" target="_blank">@Model.CompanyWebsite</a></h6>
                }
            </div>

            @if (Model.DisplayReview)
            {
                @Html.Partial("Assets/_Review", Model)
            }
        </div>
        <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 profile-right">
            <table>
                <tbody>
                    @*
                        <tr class="profile-editable" data-edit-url="@Url.Action("Company","Provider")">
                            <td colspan="2">
                                <span class="glyphicon glyphicon-briefcase"></span>&nbsp;&nbsp;Base Spin LLC&nbsp;&nbsp;
                                <span class="label label-default">Owner</span>
                            </td>
                        </tr>
                    *@
                    @if (Model.Type == "provider")
                    {
                        <tr>
                            <td style="white-space: nowrap;">
                                Years in Industry:
                            </td>
                            <td>
                                <div class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Experience" }, null)">@Model.Experience</div>
                            </td>
                        </tr>
                    }
                    @if (Model.Focuses != null && Model.Focuses.Any())
                    {
                        <tr>
                            <td>
                                Area(s) of Focus:
                            </td>
                            <td>
                                <div class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Industry" }, null)">
                                    @for (var i = 0; i < Model.Focuses.Count(); i++)
                                    {
                                        <span class="label label-warning label-lg">@Model.Focuses[i]</span><br />
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                    @if (Model.LicenseTitles != null && Model.LicenseTitles.Any())
                    {
                        <tr>
                            <td>
                                Licensing:
                            </td>
                            <td>
                                <div class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Experience" }, null)">
                                    @foreach (var l in Model.LicenseTitles)
                                    {
                                        <span class="label label-primary label-lg">@l</span>
                                        <br />
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                    @if (Model.DesignationTitles != null && Model.DesignationTitles.Any())
                    {
                        <tr>
                            <td>
                                Designations:
                            </td>
                            <td>
                                <div class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Experience" }, null)">
                                    @foreach (var d in Model.DesignationTitles)
                                    {
                                        <span class="label label-default label-lg">@d</span>
                                        <br />
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                    @if (Model.Type == "provider")
                    {

                        var availability = Model.Availability == "all" ? "Available for both short-term and long-term projects/services" : (Model.Availability == "short only" ? "Only available for short‐term projects" : "Not currently available for new projects");

                        <tr>
                            <td>
                                Availability:
                            </td>
                            <td>
                                <div class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Industry" }, null)">@availability</div>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td>
                            How do you charge?
                        </td>
                        <td>
                            <div class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Industry" }, null)">@Model.FeeTypeTitle</div>
                        </td>
                    </tr>
                    @if (Model.FeeTypeTitle != null && Model.FeeTypeTitle.Contains("Hourly"))
                    {
                        <tr>
                            <td>
                                Hourly rate range:
                            </td>
                            <td>
                                <div class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Industry" }, null)">@Model.HourlyRateTitle</div>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td>
                            Formal Education:
                        </td>
                        <td>
                            <div class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Experience" }, null)">
                                <b>@Model.SchoolName</b><br />@Model.EdLevel<br />@Model.DegreeMajor
                            </div>
                        </td>
                    </tr>
                    <tr class="hidden-sm hidden-md hidden-lg">
                        <td>
                            Engagements:
                        </td>
                        <td>
                            @Model.Engagements
                    </td>
                </tr>
                <tr class="hidden-sm hidden-md hidden-lg">
                    <td>
                        Expert Rating:
                    </td>
                    <td>
                        @for (var i = 0; i < Model.AbsRating; i++)
                        {
                            <span class="glyphicon glyphicon-star"></span>
                        }
                        @for (var i = 0; i < 5 - Model.AbsRating; i++)
                        {
                            <span class="glyphicon glyphicon-star-empty"></span>
                        }
                    </td>
                </tr>
            </tbody>
        </table>


        @if (Model.ProductTitles != null && Model.ProductTitles.Any())
        {
            <hr />
            <table>
                <tbody>
                    <tr>
                        <td>
                            Products:
                        </td>
                        <td>
                            <div class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Expertise" }, null)">
                                @foreach (var p in Model.ProductTitles.OrderBy(x => x))
                                {
                                    <span class="label label-lg label-muted">@p</span>
                                }
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        }

        @if (!string.IsNullOrEmpty(Model.Summary))
        {
            <hr />
            <div>
                <p class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Personal" }, null)">
                    @Model.Summary
                </p>
            </div>
        }

        @if (Model.ServiceTitles != null && Model.ServiceTitles.Any())
        {
            <hr />
            <table>
                <tbody>
                    <tr>
                        <td>
                            Services:
                        </td>
                        <td>
                            <div class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Expertise" }, null)">
                                @foreach (var s in Model.ServiceTitles.OrderBy(x => x))
                                {
                                    <span class="label label-lg label-muted">@s</span>
                                }
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        }

        @if (Model.Articles.Any())
        {

            <hr />
            <div>
                <span style="color:#777;">Recent Publications:</span>

                <div class="container-fluid">
                    <div class="row">

                        @foreach (var a in Model.Articles.OrderByDescending(x => x.Published).Take(3))
                        {

                            var published = a.Published.HasValue ? a.Published.Value.ToString("MMM d, yyyy") : "";

                            <div class="col-xs-12">

                                <div class="card article" style="padding:15px;">
                                    <h6 class="article-title">
                                        <span class="glyphicon glyphicon-file pull-left"></span>
                                        <a href="@Url.Action("Index", "A", new { id = a.ArticleGuid })" style="margin-left:25px; display:block;">@a.Title</a>
                                    </h6>
                                    <p class="article-desc">@a.Description</p>
                                    <p class="article-meta text-muted">@published by <a href="@Url.Action("Index", "P", new { id = Model.ProfileGuid })">@a.Authors</a></p>
                                </div>

                            </div>
                        }
                    </div>
                    <div class="row">
                        <div class="col-xs-12 text-right">
                            <br /><br />
                            @Html.ActionLink("View all published articles", "Articles", "P", new { id = Model.Vanity }, null)
                        </div>
                    </div>
                </div>
            </div>
            <br />
        }




    </div>
</div>
</div>
