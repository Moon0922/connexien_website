@model Connexien.Web.Models.ProfileModel
@{
    var labels = new[] { "label-warning", "label-success", "label-info", "label-danger" };
    ViewBag.CoverId = Model.CoverPic;
    var cover = Url.Action("Picture", "Profile", new { id = ViewBag.CoverId, t = "cover" });

    var url = string.IsNullOrWhiteSpace(Model.CompanyWebsite) ? "" : Model.CompanyWebsite.ToLower().Substring(0, 4) == "http" ? Model.CompanyWebsite : "http://" + Model.CompanyWebsite;
}
<style>
    .profile .profile-cover
    {
        background-image: url('@Html.Raw(cover)');
    }

    .profile .article { overflow:hidden;}
    
    .profile .article-title 
    {
        background-color:#C7E5F3;
        margin:-15px;
        padding:15px;
    }

    .profile .article-desc 
    {
        margin-top:40px;
    }

    @@media (min-width: 768px){

        
        .article-wrap>div:nth-child(2n+1){
            clear: both;
        }
    }

</style>
<div class="container-fluid profile">
    <div class="row">
        <div class="col-xs-12">
            <div class="profile-cover">
                <div class="profile-cover-shade profile-editable profile-editbox-nopad" data-edit-url="@Url.Action("Section", "Provider", new { id = "Profile"}, null)">
                    @if (Model.Type == "provider")
                    {
                        <div class="pull-right profile-stat hidden-xs">
                            <h6>
                                @for (var i = 0; i < Model.AbsRating; i++)
                                {
                                    <span class="glyphicon glyphicon-star"></span>
                                }
                                @for (var i = 0; i < 5 - Model.AbsRating; i++)
                                {
                                    <span class="glyphicon glyphicon-star-empty"></span>
                                }
                                <br />
                                <small>Expert Rating</small>
                            </h6>
                        </div>
                        <div class="pull-right profile-stat hidden-xs">
                            <h6>@Model.Engagements<br />
                                <small>Engagements</small></h6>
                        </div>                             
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row profile-body">
        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 profile-left">
            <a href="@Url.Action("Index", "P", new {id = Model.Vanity})" class="profile-editable profile-editbox-nopad" data-edit-url="@Url.Action("Section", "Provider", new { id = "Profile" }, null)">
                <img class="profile-img img-circle" style="width:150px;" src="https://connexien.blob.core.windows.net/site-profile-images-resized/@Model.AvatarPic.GetSizedImageName(150,150)?w=150&h=150&t=avatar"/>
            </a>
            <div class="profile-editable" data-edit-url="@Url.Action("Section", "Provider", new { id = "Personal" }, null)">
                <h5 class="text-muted">
                    <b>@Model.FirstName @Model.LastName</b><br />
                    <small>@Model.Title at @Model.CompanyName</small>
                </h5>
                <hr />

                @{
                    var location = string.IsNullOrWhiteSpace(Model.City) ? Model.City : "";
                    location = string.IsNullOrWhiteSpace(location) ? Model.State : location + ", " + Model.State; 
                }

                @if (!string.IsNullOrWhiteSpace(location))
                {
                    <h6><span class="glyphicon glyphicon-map-marker"></span>&nbsp;&nbsp;@location</h6>
                }
                @if (!string.IsNullOrWhiteSpace(Model.PersonalPhone))
                {
                    <h6><span class="glyphicon glyphicon-phone"></span>&nbsp;&nbsp;<a href="tel: @Model.PersonalPhone">@Model.PersonalPhone</a></h6>
                }
                @if (!string.IsNullOrWhiteSpace(Model.PersonalEmail))
                {
                    <h6><span class="glyphicon glyphicon-envelope"></span>&nbsp;&nbsp;<a href="mailto: @Model.PersonalEmail">@Model.PersonalEmail</a></h6>
                }
                @if (!string.IsNullOrWhiteSpace(Model.CompanyWebsite))
                {
                    <h6><span class="glyphicon glyphicon-link"></span>&nbsp;&nbsp;<a href="@url" target="_blank">@Model.CompanyWebsite</a></h6>
                }
            </div>

        </div>
        <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 profile-right">

            @if (Model.Articles.Any())
            {
                
                <div>
                    <h4 style="color:#777;">
                        <a href="@Url.Action("Index", "P", new {id = Model.Vanity})">@Model.FirstName @Model.LastName</a> / Articles
                    </h4>

                    <div class="container-fluid">
                        <div class="row article-wrap">

                            @foreach (var a in Model.Articles.OrderByDescending(x => x.Published))
                            {

                                var published = a.Published.HasValue ? a.Published.Value.ToString("MMM d, yyyy") : "";
                                
                                <div class="col-xs-12 col-sm-6">

                                    <div class="card article" style="padding:15px;">
                                        <h6 class="article-title">
                                            <span class="glyphicon glyphicon-file pull-left"></span>
                                            <a href="@Url.Action("Index", "A", new { id = a.ArticleGuid })" style="margin-left:25px; display:block;">@a.Title</a>
                                        </h6>
                                        <p class="article-desc">@a.Description</p>
                                        <p class="article-meta text-muted">@published by <a href="@Url.Action("Index", "P", new { id = Model.ProfileGuid })">@a.Authors</a></p>
                                    </div>

                                </div>
                            }

                        </div>
                    </div>
                </div>
                <br/>
            }
            else
            {
                <h3>No published articles available.</h3>
            }


        </div>
    </div>
</div>
